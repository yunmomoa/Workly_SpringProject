<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meetingReservationMapper">

    <!-- ✅ 모든 회의실 예약 조회 -->
    <select id="getAllReservations" resultType="MeetingReservation">
        SELECT 
            MR_RES_NO AS mrResNo,
            MR_NO AS mrNo,
            USER_NO AS userNo,
            MR_RES_TITLE AS mrResTitle,
            START_TIME AS startTime,
            END_TIME AS endTime,
            REASON AS reason,
            MR_STATUS AS mrStatus,
            MR_RES_DATE AS mrResDate
        FROM MR_RESERVATION
    </select>

    <!-- ✅ 특정 유저의 회의실 예약 조회 -->
    <select id="getReservationsByUser" resultType="MeetingReservation">
        SELECT 
            MR_RES_NO AS mrResNo,
            MR_NO AS mrNo,
            USER_NO AS userNo,
            MR_RES_TITLE AS mrResTitle,
            START_TIME AS startTime,
            END_TIME AS endTime,
            REASON AS reason,
            MR_STATUS AS mrStatus,
            MR_RES_DATE AS mrResDate
        FROM MR_RESERVATION
        WHERE USER_NO = #{userNo}
    </select>

    <!-- ✅ 특정 회의실의 예약 목록 조회 -->
    <select id="getReservationsByRoom" resultType="MeetingReservation">
        SELECT 
            MR_RES_NO AS mrResNo,
            MR_NO AS mrNo,
            USER_NO AS userNo,
            MR_RES_TITLE AS mrResTitle,
            START_TIME AS startTime,
            END_TIME AS endTime,
            REASON AS reason,
            MR_STATUS AS mrStatus,
            MR_RES_DATE AS mrResDate
        FROM MR_RESERVATION
        WHERE MR_NO = #{mrNo}
    </select>

    <!-- ✅ 새로운 회의실 예약 추가 -->
    <insert id="insertReservation">
	    INSERT INTO MR_RESERVATION (MR_RES_NO, MR_NO, USER_NO, MR_RES_TITLE, START_TIME, END_TIME, REASON, MR_STATUS, MR_RES_DATE)
	    VALUES (MR_RESERVATION_SEQ.NEXTVAL, #{mrNo}, #{userNo}, #{mrResTitle}, #{startTime}, #{endTime}, #{reason}, #{mrStatus}, #{mrResDate})
	</insert>


    <!-- ✅ 회의실 예약 수정 -->
    <update id="updateReservation">
        UPDATE MR_RESERVATION
        SET 
            MR_NO = #{mrNo},
            USER_NO = #{userNo},
            MR_RES_TITLE = #{mrResTitle},
            START_TIME = #{startTime},
            END_TIME = #{endTime},
            REASON = #{reason},
            MR_STATUS = #{mrStatus},
            MR_RES_DATE = #{mrResDate}
        WHERE MR_RES_NO = #{mrResNo}
    </update>

    <!-- ✅ 회의실 예약 삭제 -->
    <delete id="deleteReservation">
        DELETE FROM MR_RESERVATION WHERE MR_RES_NO = #{mrResNo}
    </delete>

	<select id="getOverlappingReservations" resultType="MeetingReservation">
	    SELECT *
	    FROM MR_RESERVATION
	    WHERE MR_NO = #{mrNo}
	      AND MR_STATUS = 'N'
	      AND (#{startTime} &lt; END_TIME
	      AND #{endTime} &gt; START_TIME)
	</select>



</mapper>
